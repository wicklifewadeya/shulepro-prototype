// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output = "generated/prisma-client"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id            String    @id
  name          String    @db.Text
  email         String
  emailVerified Boolean   @default(false)
  image         String?   @db.Text
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @default(now()) @updatedAt
  sessions      Session[]
  accounts      Account[]

  @@unique([email])
  @@map("user")
}

model Session {
  id        String   @id
  expiresAt DateTime
  token     String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  ipAddress String?  @db.Text
  userAgent String?  @db.Text
  userId    String
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([token])
  @@map("session")
}

model Account {
  id                    String    @id
  accountId             String    @db.Text
  providerId            String    @db.Text
  userId                String
  user                  User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  accessToken           String?   @db.Text
  refreshToken          String?   @db.Text
  idToken               String?   @db.Text
  accessTokenExpiresAt  DateTime?
  refreshTokenExpiresAt DateTime?
  scope                 String?   @db.Text
  password              String?   @db.Text
  createdAt             DateTime  @default(now())
  updatedAt             DateTime  @updatedAt

  @@map("account")
}

model Verification {
  id         String   @id
  identifier String   @db.Text
  value      String   @db.Text
  expiresAt  DateTime
  createdAt  DateTime @default(now())
  updatedAt  DateTime @default(now()) @updatedAt

  @@map("verification")
}



model company_details {
  id                    Int       @id @default(autoincrement())
  uuid                  String    @default(uuid()) @unique
  name                  String
  registrationNumber    String?   @map("registration_number")
  taxId                 String?   @map("tax_id")
  vatNumber             String?   @map("vat_number")
  addressLine1          String?   @map("address_line_1")
  addressLine2          String?   @map("address_line_2")
  city                  String?
  state                 String?
  country               String?
  postalCode            String?   @map("postal_code")
  phone                 String?
  email                 String?   @unique
  website               String?
  logoUrl               String?   @map("logo_url")
  contactPersonName     String?   @map("contact_person_name")
  contactPersonEmail    String?   @map("contact_person_email")
  contactPersonPhone    String?   @map("contact_person_phone")
  establishedDate       DateTime? @map("established_date")
  numberOfEmployees     Int?      @map("number_of_employees")
  description           String?
  settings              Json?     // flexible JSON for feature flags / config
  isActive              Boolean   @default(true) @map("is_active")

  createdAt             DateTime  @default(now()) @map("created_at")
  updatedAt             DateTime  @updatedAt   @map("updated_at")

  @@index([name])
  @@index([city])
}

